import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author brendan
 */
public class UpdateOrder extends javax.swing.JDialog {

    /**
     * Creates new form UpdateOrder
     */
    public UpdateOrder(java.awt.Frame parent, OrderTab orderT, Long ordId, boolean modal) {
        super(parent, modal);
        
        
        this.orderId = ordId;
        this.order = orderT;
        initComponents();
        initLab();
        initTable();
        initTotal();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jSpinner1 = new javax.swing.JSpinner();
        jTextField1 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();
        jCheckBox1 = new javax.swing.JCheckBox();
        jComboBox3 = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel33 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel35 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jComboBox5 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Finish");

        jButton2.setText("Cancel");

        jLabel1.setText("Order number :");

        jLabel2.setText("jLabel2");

        jLabel3.setText("Date of order : ");

        jLabel4.setText("jLabel4");

        jLabel5.setText("Client : ");

        jLabel6.setText("jLabel6");

        jLabel7.setText("State : ");

        jLabel9.setText("Sending cost : ");

        jLabel10.setText("cost");

        jLabel11.setText("RMB");

        jLabel12.setText("Order infos : ");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel13.setText("Articles ordered");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Brand", "Name", "State", "Paid", "Money received"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel15.setText("Quantity : ");
        jLabel15.setEnabled(false);

        jLabel16.setText("Selling price : ");
        jLabel16.setEnabled(false);

        jLabel18.setText("Order state : ");
        jLabel18.setEnabled(false);

        jLabel20.setText("Buying price : ");
        jLabel20.setEnabled(false);

        jLabel23.setText("Change rate (the date of purchase) :  1");
        jLabel23.setEnabled(false);

        jLabel24.setText("sellingUnit");
        jLabel24.setEnabled(false);

        jLabel25.setText("Remark about this article : ");
        jLabel25.setEnabled(false);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setEnabled(false);
        jScrollPane3.setViewportView(jTextArea2);

        jLabel26.setText("TOTAL : ");

        jLabel27.setText("Number of articles : ");

        jLabel28.setText("jLabel28");

        jLabel29.setText("Selling price : ");

        jLabel30.setText("jLabel30");

        jLabel31.setText("Buying price : ");

        jLabel32.setText("jLabel32");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not sent", "Sent to client", "Received by client" }));

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(1, 0, 50, 1));
        jSpinner1.setEnabled(false);

        jTextField1.setText(" - ");
        jTextField1.setEnabled(false);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RMB", "Euros" }));
        jComboBox2.setEnabled(false);

        jCheckBox1.setText("price yet to be fixed");
        jCheckBox1.setEnabled(false);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        jComboBox3.setEnabled(false);

        jTextField2.setText(" - ");
        jTextField2.setEnabled(false);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Euros", "RMB" }));
        jComboBox4.setEnabled(false);

        jLabel33.setText("=");
        jLabel33.setEnabled(false);

        jTextField3.setText(" - ");
        jTextField3.setEnabled(false);

        jLabel34.setText("buyingUnit");
        jLabel34.setEnabled(false);

        jLabel35.setText("Order");

        jCheckBox2.setText("Paid");
        jCheckBox2.setEnabled(false);

        jLabel8.setText("-  Money received : ");
        jLabel8.setEnabled(false);

        jTextField4.setText(" - ");
        jTextField4.setEnabled(false);

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RMB", "Euros" }));
        jComboBox5.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addComponent(jSeparator2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabel2)
                                        .addGap(253, 253, 253)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel11))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane1))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel26)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel29)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel30))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel27)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel28))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel31)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel32)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel25)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addGap(3, 3, 3)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCheckBox1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCheckBox2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel20)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel23)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel24)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel33)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel34)))))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel35)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 2, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27)
                            .addComponent(jLabel28))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(jLabel30))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox2)
                            .addComponent(jLabel8)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel33)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void initLab() { 

        String date = "";
        String clientName = "";
        String state="";
        String sendCost = "";
        String infos = "";
        String row = Long.toString(orderId);
        
        Statement stmt = null;
        try{
            stmt = order.getMainWin().getConnection().createStatement();
            String sqlQuery;
            sqlQuery="SELECT date,cl.name,state,send_cost,ord.infos from V_Orders as ord inner join V_Clients as cl on ord.clients=cl.cl_id "
                    + " where ord.or_id="+row;
            ResultSet rs = stmt.executeQuery(sqlQuery);
            if (rs.next()) { 
                date = rs.getString("date");
                clientName = rs.getString("cl.name");
                state = rs.getString("state");
                sendCost = rs.getString("send_cost");
                infos = rs.getString("infos");
            }
        } catch(SQLException se) {
            //Handle errors for JDBC
            JOptionPane.showMessageDialog(this, "Unexpected error, Request problem\nDetails : "+se.getMessage(),
                "Warning", JOptionPane.ERROR_MESSAGE);
        } finally {
            //finally block used to close resources
            try{
                if(stmt!=null)
                stmt.close();
            }catch(SQLException se2){ }// nothing we can do
        }//end finally
        
        
        jLabel2.setText(row);
        jLabel4.setText(date);
        jLabel6.setText(clientName);
        
        if ("0".equals(state)) {
            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not sent", "Sent to client", "Received by client" }));
            jLabel10.setText(" - ");
            jLabel11.setText("");
        }
        if ("1".equals(state)) {
            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sent to client", "Received by client" }));
            jLabel10.setText(sendCost);
            jLabel11.setText("RMB");
        }
        if ("2".equals(state)) {
            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Received by client" }));
            jLabel10.setText(sendCost);
            jLabel11.setText("RMB");
        }

        jTextArea1.setText(infos);
    }
    
    private void initTable() {
        Statement stmt = null;
        try{
            stmt = order.getMainWin().getConnection().createStatement();
            ResultSet rs = stmt.executeQuery("select prod.brand as Brand,prod.name as Name,"
                    + "ord.state as Article_state,ord.paid as Paid,ord.money_received as Money_received from V_Ord_Articles AS ord inner join V_Products AS prod "
                    + "on ord.article=prod.pr_id inner join V_Orders on V_Orders.or_id=ord.ord where V_Orders.or_id="+Long.toString(orderId));
            jTable1.setModel(OrderTab.buildTableModel(rs));
        } catch(SQLException se) {
                //Handle errors for JDBC
                JOptionPane.showMessageDialog(this, "Unexpected error, select request problem\nDetails : "+se.getMessage(),
                    "Warning", JOptionPane.ERROR_MESSAGE);
        } finally {
            //finally block used to close resources
            try{
                if(stmt!=null)
                stmt.close();
            }catch(SQLException se2){ }// nothing we can do
        }//end finally
        
        stmt = null;
        int nbRow=0;
        try{
            stmt = order.getMainWin().getConnection().createStatement();
            ResultSet rs = stmt.executeQuery("select count(*) from V_Ord_Articles where ord="+Long.toString(orderId));
            if (rs.next()) {
                nbRow=rs.getInt("count(*)");
            }
        } catch(SQLException se) {
                //Handle errors for JDBC
                JOptionPane.showMessageDialog(this, "Unexpected error, select request problem\nDetails : "+se.getMessage(),
                    "Warning", JOptionPane.ERROR_MESSAGE);
        } finally {
            //finally block used to close resources
            try{
                if(stmt!=null)
                stmt.close();
            }catch(SQLException se2){ }// nothing we can do
        }//end finally
        
        for (int i=0; i<nbRow; i++) {
            switch (jTable1.getValueAt(i,2).toString()) {
                case "0" : jTable1.setValueAt("Not purchased",i,2);
                    break;
                case "1" : jTable1.setValueAt("Purchased",i,2);
                    break;
                case "2" : jTable1.setValueAt("Sent to China",i,2);
                    break;    
                case "3" : jTable1.setValueAt("Received in China",i,2);
                    break;
            }
            switch (jTable1.getValueAt(i,3).toString()) {
                case "0" : jTable1.setValueAt("No",i,3);
                    break;
                case "1" : jTable1.setValueAt("Yes",i,3);
                    break;
            }
        }
        
        //change the width of the fourth column of the table
        TableColumn col = jTable1.getColumnModel().getColumn(3);
        col.setPreferredWidth(25);
        
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);  
        
        ListSelectionModel rowSM = jTable1.getSelectionModel();
        rowSM.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                tableValueChangedEvent(e);  
            }
        });
        
        
    }
    
    private void initTotal() {
        ArrayList<Integer> quantity = new ArrayList<> ();
        ArrayList<Double> sellPrice = new ArrayList<> ();
        ArrayList<String> spUnit = new ArrayList<> ();
        ArrayList<Double> buyPrice = new ArrayList<> ();
        ArrayList<String> bpUnit = new ArrayList<> ();
        String incomplS = "";
        String incomplB = "";
        
        Statement stmt = null;
        try{
            stmt = order.getMainWin().getConnection().createStatement();
            ResultSet rs = stmt.executeQuery("select quantity,selling_price,sp_unit,buying_price,bp_unit "
                    + "from V_Ord_Articles where V_Ord_Articles.ord="+Long.toString(orderId));
            while (rs.next()) {
                quantity.add(rs.getInt("quantity"));
                sellPrice.add(rs.getDouble("selling_price"));
                spUnit.add(rs.getString("sp_unit"));
                buyPrice.add(rs.getDouble("buying_price"));
                bpUnit.add(rs.getString("bp_unit"));
            }
        } catch(SQLException se) {
                //Handle errors for JDBC
                JOptionPane.showMessageDialog(this, "Unexpected error, select request problem\nDetails : "+se.getMessage(),
                    "Warning", JOptionPane.ERROR_MESSAGE);
        } finally {
            //finally block used to close resources
            try{
                if(stmt!=null)
                stmt.close();
            }catch(SQLException se2){ }// nothing we can do
        }//end finally
        
        Double totRMB=0.;    
        Double totRMBbuy=0.; 
        Double totEur=0.;
        Double totEurbuy=0.;
        int totQuant = 0;
        for (int i=0; i<quantity.size(); i++) {        
            //for quantity
            totQuant += quantity.get(i);
            
            //for selling price
            if (null==spUnit.get(i)) {
                incomplS = " (incomplete information)";
            } else {
                switch (spUnit.get(i)) {
                    case "RMB":
                        totRMB += sellPrice.get(i) * quantity.get(i);
                        break;
                    case "Euros":
                        totEur += sellPrice.get(i) * quantity.get(i);
                        break;
                }
            }
            
            
            //for buying price
            if (null==bpUnit.get(i)) {
                incomplB = " (incomplete information)";
            } else {
                switch (bpUnit.get(i)) {
                    case "RMB":
                        totRMBbuy += buyPrice.get(i) * quantity.get(i);
                        break;
                    case "Euros":
                        totEurbuy += buyPrice.get(i) * quantity.get(i);
                        break;
                }
            }
 
        }
        
        String str="";
        if (totRMB!=0 && totEur!=0) {
            str = totRMB + " RMB + " + totEur + " Euros " + incomplS;
        }
        if (totRMB==0 && totEur!=0) {
            str = totEur + " Euros " + incomplS;
        }
        if (totRMB!=0 && totEur==0) {
            str = totRMB + " RMB " + incomplS;
        }
        if (totRMB==0 && totEur==0) {
            str = incomplS;
        }
        
        jLabel30.setText(str);
        jLabel28.setText(Integer.toString(totQuant));
        
        str="";
        if (totRMBbuy!=0 && totEurbuy!=0) {
            str = totRMBbuy + " RMB + " + totEurbuy + " Euros " + incomplB;
        }
        if (totRMBbuy==0 && totEurbuy!=0) {
            str = totEurbuy + " Euros " + incomplB;
        }
        if (totRMBbuy!=0 && totEurbuy==0) {
            str = totRMBbuy + " RMB " + incomplB;
        }
        if (totRMBbuy==0 && totEurbuy==0) {
            str = incomplB;
        }
        
        jLabel32.setText(str);
        
    }
    
    
    private void tableValueChangedEvent(ListSelectionEvent e) {
        ListSelectionModel lsm = (ListSelectionModel)e.getSource();
        if (lsm.isSelectionEmpty()) {
            jLabel15.setEnabled(false);
            jSpinner1.setEnabled(false);
            jSpinner1.setValue(1);
            jLabel16.setEnabled(false);
            jTextField1.setEnabled(false);
            jTextField1.setText(" - ");
            jComboBox2.setEnabled(false);
            jCheckBox1.setEnabled(false);
            jCheckBox1.setSelected(false);
            jCheckBox2.setEnabled(false);
            jCheckBox2.setSelected(false);
            jLabel8.setEnabled(false);
            jTextField4.setEnabled(false);
            jTextField4.setText(" - ");
            jComboBox5.setEnabled(false);
            jLabel18.setEnabled(false);
            jComboBox3.setEnabled(false);
            jComboBox3.setModel(new DefaultComboBoxModel(new String[] { " - " } ));
            jLabel20.setEnabled(false);
            jTextField2.setEnabled(false);
            jTextField2.setText(" - ");
            jComboBox4.setEnabled(false);
            jLabel23.setEnabled(false);
            jLabel24.setEnabled(false);
            jLabel24.setText( "sellingUnit" );
            jLabel33.setEnabled(false);
            jTextField3.setEnabled(false);
            jTextField3.setText( " - " );
            jLabel34.setEnabled(false);
            jLabel34.setText( "sellingUnit" );
            jLabel25.setEnabled(false);
            jTextArea2.setEnabled(false);
            jTextArea2.setText("");
        } else {
            Statement stmt = null;
            try{
                stmt = order.getMainWin().getConnection().createStatement();
                String artId = Integer.toString(jTable1.getSelectedRow());
                
                ResultSet rs = stmt.executeQuery("select quantity,selling_price,sp_unit,buying_price,bp_unit,"
                        + "change_rate,paid,state,infos,money_received,mr_unit from V_Ord_Articles "
                        + "where V_Ord_Articles.ord="+Long.toString(orderId) + " LIMIT " + artId + ",1") ;
                if (rs.next()) {
                    jLabel15.setEnabled(true);
                    jSpinner1.setEnabled(true);
                    jSpinner1.setValue(rs.getInt("quantity"));
                    
                    jLabel16.setEnabled(true);
                    jCheckBox1.setEnabled(true);
                    if (null==rs.getString("sp_unit")) {
                        jTextField1.setText(" - ");
                        jTextField1.setEnabled(false);
                        jComboBox2.setSelectedItem("RMB");
                        jComboBox2.setEnabled(false);
                        jCheckBox1.setSelected(true);
                    } else {
                        jTextField1.setText(Double.toString(rs.getDouble("selling_price")));
                        jTextField1.setEnabled(true);
                        jComboBox2.setSelectedItem(rs.getString("sp_unit"));
                        jComboBox2.setEnabled(true);
                    }
                    
                    jCheckBox2.setEnabled(true);
                    jLabel8.setEnabled(true);
                    if ("0".equals(rs.getString("paid"))) {
                        jCheckBox2.setSelected(false);
                        jTextField4.setText(" - ");
                        jTextField4.setEnabled(false);
                        jComboBox5.setSelectedItem("RMB");
                        jComboBox5.setEnabled(false);
                    } else {
                        jCheckBox2.setSelected(true);
                        jTextField4.setText(rs.getString("money_received"));
                        jTextField4.setEnabled(true);
                        jComboBox5.setSelectedItem(rs.getString("mr_unit"));
                        jComboBox5.setEnabled(true);
                    }
                    
                    jLabel18.setEnabled(true);
                    jLabel20.setEnabled(true);
                    jLabel23.setEnabled(true);
                    jLabel24.setEnabled(true);
                    jLabel24.setText(jComboBox2.getSelectedItem().toString());
                    jLabel33.setEnabled(true);
                    jLabel34.setEnabled(true);
                    jLabel34.setText(jComboBox4.getSelectedItem().toString());
                    jComboBox3.setEnabled(true);
                    switch (rs.getString("state")) {
                        case "0" :
                            jComboBox3.setModel(new DefaultComboBoxModel(new String[] { "Not purchased","Purchased","Sent to China","Received in China"}));
                            jTextField2.setEnabled(false);
                            jTextField2.setText(" - ");
                            jComboBox4.setEnabled(false);
                            jComboBox4.setSelectedItem("Euros");
                            jTextField3.setEnabled(false);
                            jTextField3.setText( " - " );
                            break;
                        case "1" :
                            jComboBox3.setModel(new DefaultComboBoxModel(new String[] { "Purchased","Sent to China","Received in China"}));
                            jTextField2.setEnabled(true);
                            jTextField2.setText(rs.getString("buying_price"));
                            jComboBox4.setEnabled(true);
                            jComboBox4.setSelectedItem(rs.getString("bp_unit"));
                            jTextField3.setEnabled(true);
                            jTextField3.setText(rs.getString("change_rate"));
                            break;
                        case "2" :
                            jComboBox3.setModel(new DefaultComboBoxModel(new String[] { "Sent to China","Received in China"}));
                            jTextField2.setEnabled(true);
                            jTextField2.setText(rs.getString("buying_price"));
                            jComboBox4.setEnabled(true);
                            jComboBox4.setSelectedItem(rs.getString("bp_unit"));
                            jTextField3.setEnabled(true);
                            jTextField3.setText(rs.getString("change_rate"));
                            break;
                        case "3" :
                            jComboBox3.setModel(new DefaultComboBoxModel(new String[] { "Received in China"}));
                            jTextField2.setEnabled(true);
                            jTextField2.setText(rs.getString("buying_price"));
                            jComboBox4.setEnabled(true);
                            jComboBox4.setSelectedItem(rs.getString("bp_unit"));
                            jTextField3.setEnabled(true);
                            jTextField3.setText(rs.getString("change_rate"));
                            break;    
                    }
                    
                    jLabel25.setEnabled(true);
                    jTextArea2.setEnabled(true);
                    jTextArea2.setText(rs.getString("infos"));
                  
                }
                
            } catch(SQLException se) {
                    //Handle errors for JDBC
                    JOptionPane.showMessageDialog(this, "Unexpected error, select request problem\nDetails : "+se.getMessage(),
                        "Warning", JOptionPane.ERROR_MESSAGE);
            } finally {
                //finally block used to close resources
                try{
                    if(stmt!=null)
                    stmt.close();
                }catch(SQLException se2){ }// nothing we can do
            }//end finally
        }
    }
    
    
    private final Long orderId;
    private final OrderTab order;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
