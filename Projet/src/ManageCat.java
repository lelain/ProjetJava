
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author brendan
 */
public class ManageCat extends javax.swing.JDialog {

    /**
     * Creates new form ManageCat
     */
    public ManageCat(java.awt.Frame parent, boolean modal, ProductTab product) {
        super(parent, modal);
        this.product=product;
        this.treeString=product.getLevel();
        initComponents();
        
        initializeList1();
        
        jList2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jList1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        jList1.addListSelectionListener( new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting() == false) {

                    if (jList1.getSelectedIndex() == -1) {
                    //No selection, disable fire button.
                    addChildButton.setEnabled(false);
                    parentUp.setEnabled(false);
                    parentDown.setEnabled(false);
                    modifyParent.setEnabled(false);

                    } else {
                    //Selection, enable the fire button.
                    addChildButton.setEnabled(true);   
                    modifyParent.setEnabled(true);
                    if (jList1.getSelectedIndex()==0) { 
                        parentUp.setEnabled(false); 
                    } else {
                        parentUp.setEnabled(true);
                    }
                    if (jList1.getSelectedIndex()==treeString.size()-1) { 
                        parentDown.setEnabled(false); 
                    } else {
                        parentDown.setEnabled(true);
                    }
                    //fill the jList2 with the item corresponding to the level 1 selection
                    initializeList2(jList1.getSelectedIndex());
                    }
                }
            }

        });
        
        jList2.addListSelectionListener( new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting() == false) {
                    int index1 = jList1.getSelectedIndex();
                    int index2 = jList2.getSelectedIndex();
                    if (index2 == -1) {
                    //No selection, disable fire button.
                    childUp.setEnabled(false);
                    childDown.setEnabled(false);
                    modifyChild.setEnabled(false);

                    } else {
                        //Selection, enable the fire button.
                        modifyChild.setEnabled(true);
                        //je sais pas pourquoi il commence a 1 ici
                        if (index2==1) { 
                            childUp.setEnabled(false); 
                        } else {
                            childUp.setEnabled(true);
                        }
                        if (index2==treeString.get(index1).length-1) { 
                            childDown.setEnabled(false); 
                        } else {
                            childDown.setEnabled(true);
                        }   
                    
                    }
                }
            }

        });
        
        
    }
    
    
    private void initializeList1() {
        String[] level1=new String[treeString.size()];
        for (int i=0; i<level1.length; i++) {
            level1[i]=treeString.get(i)[0];
        }
        jList1.setListData(level1);
    }
    
    private void initializeList2(int index) {
        String[] level2=new String[treeString.get(index).length];
        System.arraycopy(treeString.get(index), 1, level2, 1, level2.length - 1);
        jList2.setListData(level2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        addParentButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        addChildButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        finishButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        parentUp = new javax.swing.JButton();
        parentDown = new javax.swing.JButton();
        modifyParent = new javax.swing.JButton();
        modifyChild = new javax.swing.JButton();
        childUp = new javax.swing.JButton();
        childDown = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Product categories");

        jLabel2.setText("Parent");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        addParentButton.setText("Add parent");
        addParentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addParentButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Child");

        jScrollPane2.setViewportView(jList2);

        addChildButton.setText("Add child");
        addChildButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addChildButtonActionPerformed(evt);
            }
        });

        finishButton.setText("Finish");

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        parentUp.setText("up");
        parentUp.setEnabled(false);
        parentUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentUpActionPerformed(evt);
            }
        });

        parentDown.setText("down");
        parentDown.setEnabled(false);
        parentDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parentDownActionPerformed(evt);
            }
        });

        modifyParent.setText("Modify");
        modifyParent.setEnabled(false);
        modifyParent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyParentActionPerformed(evt);
            }
        });

        modifyChild.setText("Modify");
        modifyChild.setEnabled(false);
        modifyChild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyChildActionPerformed(evt);
            }
        });

        childUp.setText("Up");
        childUp.setEnabled(false);
        childUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                childUpActionPerformed(evt);
            }
        });

        childDown.setText("Down");
        childDown.setEnabled(false);
        childDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                childDownActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addParentButton)
                                    .addComponent(modifyParent)
                                    .addComponent(parentDown)
                                    .addComponent(parentUp))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addChildButton)
                                    .addComponent(modifyChild)
                                    .addComponent(childUp)
                                    .addComponent(childDown))))
                        .addGap(78, 78, 78))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelButton)
                .addGap(18, 18, 18)
                .addComponent(finishButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addParentButton)
                                .addGap(18, 18, 18)
                                .addComponent(modifyParent))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addChildButton)
                                .addGap(18, 18, 18)
                                .addComponent(modifyChild)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(parentUp)
                            .addComponent(childUp, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(parentDown)
                            .addComponent(childDown))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(12, 12, 12)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finishButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addParentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addParentButtonActionPerformed
        // add a parent in the list, create a default 'other' child 
        String answerCat = JOptionPane.showInputDialog (this, "New category :") ;
        if (answerCat.length() > 80) {
            JOptionPane.showMessageDialog(this, "Category too long, please make it shorter",
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (answerCat.length() > 0) {
            String[] newLevel1 = {answerCat,"Other"};
            treeString.add(newLevel1);
            initializeList1();
        }
        
    }//GEN-LAST:event_addParentButtonActionPerformed

    private void addChildButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addChildButtonActionPerformed
        //add a child
        String answerCat = JOptionPane.showInputDialog (this, "New subcategory :") ;
        if (answerCat.length() > 80) {
            JOptionPane.showMessageDialog(this, "Category too long, please make it shorter",
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (answerCat.length() > 0) {
            int index = jList1.getSelectedIndex();
            String[] subCat = new String[treeString.get(index).length+1];   //we copy what we already have
            System.arraycopy(treeString.get(index), 0, subCat, 0, subCat.length-1);
            subCat[subCat.length-1]=answerCat;  //and add the new one at the end
            treeString.set(index,subCat);
            initializeList2(index);
        }
    }//GEN-LAST:event_addChildButtonActionPerformed

    private void parentUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parentUpActionPerformed
        // moving upstairs
        int index = jList1.getSelectedIndex();
        //if we are on the top of the list we do nothing
        if (index==0) {return;}
        //else we store the line upstrairs
        String[] copy=treeString.get(index-1).clone();
        treeString.set(index-1,treeString.get(index));
        treeString.set(index,copy);
        //refresh the list
        initializeList1();
        jList1.setSelectedIndex(index-1);
        
        
    }//GEN-LAST:event_parentUpActionPerformed

    private void parentDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parentDownActionPerformed
        // TODO add your handling code here:
         int index = jList1.getSelectedIndex();
        //if we are on the top of the list we do nothing
        if (index==treeString.size()) {return;}
        //else we store the line upstrairs
        String[] copy=treeString.get(index+1).clone();
        treeString.set(index+1,treeString.get(index));
        treeString.set(index,copy);
        //refresh the list
        initializeList1();
        jList1.setSelectedIndex(index+1);
    }//GEN-LAST:event_parentDownActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // close the window
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void modifyParentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyParentActionPerformed
        // modify a parent
        String modCat = JOptionPane.showInputDialog (this, "New category :",jList1.getSelectedValue()) ;
        if (modCat.length() > 80) {
            JOptionPane.showMessageDialog(this, "Category too long, please make it shorter",
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (modCat.length() > 0) {
            int index = jList1.getSelectedIndex();
            String[] subCat = new String[treeString.get(index).length];   //we copy what we already have
            System.arraycopy(treeString.get(index), 0, subCat, 0, subCat.length);
            subCat[0]=modCat;  //and add the new one at the end
            treeString.set(index,subCat);
            initializeList1();
            jList1.setSelectedIndex(index);
        }
    }//GEN-LAST:event_modifyParentActionPerformed

    private void modifyChildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyChildActionPerformed
        // modify a child
        String modCat = JOptionPane.showInputDialog (this, "New subcategory :",jList2.getSelectedValue()) ;
        if (modCat.length() > 80) {
            JOptionPane.showMessageDialog(this, "Category too long, please make it shorter",
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (modCat.length() > 0) {
            int index1 = jList1.getSelectedIndex();
            int index2=jList2.getSelectedIndex();
            String[] subCat = new String[treeString.get(index1).length];   //we copy what we already have
            System.arraycopy(treeString.get(index1), 0, subCat, 0, subCat.length);
            subCat[index2]=modCat;  //and add the new one 
            treeString.set(index1,subCat);
            initializeList2(index1);
            jList2.setSelectedIndex(index2);
        }
    }//GEN-LAST:event_modifyChildActionPerformed

    private void childUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_childUpActionPerformed
        // moving upstairs
        int index1 = jList1.getSelectedIndex();
        int index2 = jList2.getSelectedIndex();
        //if we are on the top of the list we do nothing
        if (index2==0) {return;}
        //else 
        String[] copy=treeString.get(index1).clone();
        String s = copy[index2-1];
        copy[index2-1]=copy[index2];
        copy[index2]=s;
        treeString.set(index1,copy);
        //refresh the list
        initializeList2(index1);
        jList2.setSelectedIndex(index2-1);
    }//GEN-LAST:event_childUpActionPerformed

    private void childDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_childDownActionPerformed
        // moving downstairs
        int index1 = jList1.getSelectedIndex();
        int index2 = jList2.getSelectedIndex();
        //if we are on the top of the list we do nothing
        if (index2==treeString.get(index1).length-1) {return;}
        //else 
        String[] copy=treeString.get(index1).clone();
        String s = copy[index2+1];
        copy[index2+1]=copy[index2];
        copy[index2]=s;
        treeString.set(index1,copy);
        //refresh the list
        initializeList2(index1);
        jList2.setSelectedIndex(index2+1);
    }//GEN-LAST:event_childDownActionPerformed


    private ProductTab product;
    private ArrayList<String[]> treeString;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addChildButton;
    private javax.swing.JButton addParentButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton childDown;
    private javax.swing.JButton childUp;
    private javax.swing.JButton finishButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton modifyChild;
    private javax.swing.JButton modifyParent;
    private javax.swing.JButton parentDown;
    private javax.swing.JButton parentUp;
    // End of variables declaration//GEN-END:variables
}
